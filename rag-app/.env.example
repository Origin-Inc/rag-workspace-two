# Database Configuration
# IMPORTANT: For Vercel/Serverless deployments, you need BOTH URLs

# PRIMARY CONNECTION - Choose based on your deployment:

# Option 1: TRANSACTION POOLER (port 6543) - REQUIRED for Vercel/Serverless
# - Handles high concurrency with minimal connections
# - IPv4 compatible (free)
# - Does NOT support PREPARE statements outside transactions
DATABASE_URL=postgresql://postgres.PROJECT_ID:[YOUR_PASSWORD]@aws-1-us-east-2.pooler.supabase.com:6543/postgres

# Option 2: SESSION POOLER (port 5432) - Alternative for IPv4 networks
# - Use when you need IPv4 but want session-based pooling
# DATABASE_URL=postgresql://postgres.PROJECT_ID:[YOUR_PASSWORD]@aws-1-us-east-2.pooler.supabase.com:5432/postgres

# Option 3: DIRECT CONNECTION (port 5432) - For traditional hosting only
# - Best for VMs or containers with persistent connections
# - NOT IPv4 compatible without add-on
# DATABASE_URL=postgresql://postgres:[YOUR_PASSWORD]@db.PROJECT_ID.supabase.co:5432/postgres

# DIRECT CONNECTION - REQUIRED for migrations (always use port 5432)
# This bypasses the pooler for schema changes and migrations
DIRECT_URL=postgresql://postgres:[YOUR_PASSWORD]@db.PROJECT_ID.supabase.co:5432/postgres

# Connection Pooling Configuration (for serverless)
USE_TRANSACTION_MODE=true  # Enable transaction mode for serverless
INSTANCE_COUNT=10           # Number of expected app instances
MAX_POOL_SIZE=100          # Total PgBouncer connection pool size

# Redis Configuration
# Recommended: Use Upstash for Vercel (https://upstash.com)
REDIS_URL=redis://default:[YOUR_PASSWORD]@[YOUR_ENDPOINT].upstash.io:[PORT]
REDIS_HOST=your-redis-host
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password

# OpenAI Configuration
# Get your API key from: https://platform.openai.com/api-keys
# SECURITY: Never commit real API keys to git!
OPENAI_API_KEY=sk-...your-openai-api-key-here
OPENAI_ORGANIZATION=

# JWT Configuration
# Generate with: openssl rand -hex 32
JWT_SECRET=CHANGE_THIS_generate_secure_random_string_min_32_chars
JWT_EXPIRY=7d

# WebSocket Configuration
WS_URL=wss://your-app.vercel.app

# Application Configuration
NODE_ENV=production
PORT=3000
HOST=0.0.0.0
APP_URL=https://your-app.vercel.app

# Session Configuration
# Generate with: openssl rand -hex 32 (different from JWT_SECRET)
SESSION_SECRET=CHANGE_THIS_different_secure_random_string_min_32_chars

# Logging
LOG_LEVEL=info
LOG_FORMAT=json

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# File Upload
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=pdf,txt,md,json,csv

# Vector Database
VECTOR_DIMENSIONS=1536
SIMILARITY_THRESHOLD=0.7

# Queue Configuration
QUEUE_CONCURRENCY=5
QUEUE_MAX_JOBS=100

# Supabase Configuration
# Get these from: https://app.supabase.com/project/[YOUR_PROJECT]/settings/api
SUPABASE_URL=https://[YOUR_PROJECT].supabase.co
SUPABASE_ANON_KEY=eyJ...your-anon-key-from-supabase
SUPABASE_SERVICE_ROLE_KEY=eyJ...your-service-role-key-from-supabase

# Vercel Specific
# Generate with: openssl rand -hex 32
CRON_SECRET=CHANGE_THIS_secure_cron_secret_for_vercel

# Encryption Configuration
# Generate with: openssl rand -base64 32
ENCRYPTION_SECRET=CHANGE_THIS_base64_encoded_32_byte_key

# Feature Flags
ENABLE_INDEXING_WORKER=true  # Enable in production when Redis is configured

# Monitoring (Optional but Recommended)
# SENTRY_DSN=https://...@sentry.io/...
# POSTHOG_API_KEY=phc_...
# POSTHOG_HOST=https://app.posthog.com