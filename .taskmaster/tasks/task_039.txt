# Task ID: 39
# Title: Create Database Schema for Chat System
# Status: pending
# Dependencies: 38
# Priority: high
# Description: Design and implement database tables for data analytics chat system with file upload tracking
# Details:
Create minimal MVP schema for data analytics chat: ChatMessage table (id, pageId, workspaceId, role, content, timestamp, metadata) for storing chat conversations per page. DataFile table (id, pageId, workspaceId, filename, originalName, fileType, tableName, uploadedAt, metadata) for tracking uploaded CSV/Excel files and their corresponding DuckDB table names. Add necessary indexes for query performance. Keep schema simple and focused on 4-week MVP scope.

# Test Strategy:
Validate schema with Prisma migrate. Test CRUD operations for chat messages and file records. Verify foreign key constraints. Test file metadata storage and retrieval.

# Subtasks:
## 1. Update Prisma Schema File [pending]
### Dependencies: None
### Description: Add data analytics chat-related models to the Prisma schema
### Details:
Add ChatMessage model with fields: id (UUID), pageId, workspaceId, role (user/assistant/system), content, timestamp, metadata (JSON for storing query results, chart configs). Create DataFile model with fields: id (UUID), pageId, workspaceId, filename, originalName, fileType (csv/excel), tableName (DuckDB table reference), uploadedAt, metadata (JSON for column info, row count). Define indexes on pageId and workspaceId for fast queries.

