# Task ID: 38
# Title: Design AI Chat Block Architecture
# Status: pending
# Dependencies: 35, 36, 37
# Priority: high
# Description: Design the architecture for a data analytics chat sidebar with natural language SQL query capabilities and file upload support
# Details:
Define database schema for single chat per page with message history. Design persistent sidebar component (30% width) with DuckDB WASM integration. Plan natural language to SQL conversion pipeline. Design file upload flow for CSV/Excel processing. Document block generation from chat responses.

# Test Strategy:
Review architecture documentation for MVP scope feasibility. Validate database schema supports single chat per page. Verify DuckDB WASM integration approach. Test file upload and SQL generation pipeline design.

# Subtasks:
## 1. Design MVP Chat Database Schema [pending]
### Dependencies: None
### Description: Design simplified database schema for single chat per page
### Details:
Define page_chats table with fields for id, pageId, workspaceId, createdAt, updatedAt (one-to-one with pages). Design chat_messages table with id, pageChatId, role, content, sqlQuery, timestamp, metadata. Create uploaded_files table for CSV/Excel references. Keep schema minimal for 4-week MVP.

## 2. Design Chat Sidebar Component Architecture [pending]
### Dependencies: None
### Description: Plan persistent sidebar component structure and state management
### Details:
Design 30% width sidebar that persists across page navigation. Define component hierarchy: ChatSidebar > MessageList > Message, FileUploader, QueryInput. Plan state management for messages, file uploads, and SQL results. Design responsive behavior for mobile/tablet views.

## 3. Plan DuckDB WASM Integration [pending]
### Dependencies: None
### Description: Design browser-based SQL processing architecture
### Details:
Plan DuckDB WASM initialization and lifecycle management. Design in-memory database structure for uploaded CSV/Excel files. Define SQL execution pipeline and result formatting. Plan memory management and performance optimization strategies.

## 4. Design Natural Language to SQL Pipeline [pending]
### Dependencies: None
### Description: Plan conversion system from natural language to SQL queries
### Details:
Design prompt engineering for SQL generation using OpenAI. Plan schema introspection for uploaded files. Define query validation and error handling. Design fallback mechanisms for ambiguous queries. Document supported query patterns for MVP.

## 5. Design Block Generation from Chat [pending]
### Dependencies: None
### Description: Plan system for creating page blocks from chat responses
### Details:
Design mechanism to generate table blocks from SQL results. Plan chart block creation from data analysis. Define text block generation for insights. Design drag-and-drop or click-to-add interface for adding blocks to page. Document block type mappings.

